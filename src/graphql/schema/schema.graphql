### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AddAndCreateTranslatorInput {
  email: String!
  firstName: String!
  languages: [String!]
  lastName: String
  phone: String!
}

input AddTranslatorInput {
  email: String!
}

type Address {
  address1: String
  address2: String
  assignment: [Assignment]
  city: String
  id: String
  state: String
  user: User
  userId: String
  zipCode: String
}

type Assignment {
  address: Address
  assignedTo: User
  claimant: Claimant
  claimantNoShow: Boolean
  createdAt: DateTime
  createdBy: User
  dateTime: DateTime
  id: String
  isComplete: Boolean
  translatorNoShow: Boolean
}

input ByEmailInput {
  email: String!
}

input ByIdInput {
  id: String!
}

type Claimant {
  assignment: [Assignment]
  email: String
  firstName: String
  id: String
  languages: [String]
  lastName: String
  phone: String
  user: User
  userId: String
}

input CompleteProfileInput {
  firstName: String!
  isManager: Boolean!
  isTranslator: Boolean!
  languages: [String!]
  lastName: String!
  phone: String!
}

input CreateAddressInput {
  address1: String!
  address2: String
  city: String!
  state: String!
  zipCode: String!
}

input CreateAssignmentInput {
  addressId: String!
  claimantId: String!
  dateTime: DateTime!
  translatorId: String!
}

input CreateClaimantInput {
  email: String
  firstName: String!
  languages: [String!]
  lastName: String!
  phone: String!
}

input CreateReminderInput {
  assignmentId: String!
  claimantMessage: String
  isEmail: Boolean
  isSMS: Boolean
  translatorMessage: String
}

input CreateUserInput {
  email: String!
  firstName: String
  lastName: String
  phone: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input DisconnectTranslatorInput {
  email: String!
}

type Mutation {
  addAndCreateTranslator(input: AddAndCreateTranslatorInput!): User
  addTranslator(input: AddTranslatorInput!): User
  completeProfile(input: CompleteProfileInput!): User
  createAddress(input: CreateAddressInput!): Address!
  createAssignment(input: CreateAssignmentInput!): Assignment!
  createClaimant(input: CreateClaimantInput!): Claimant!
  createReminder(input: CreateReminderInput!): Reminder!
  createUser(input: CreateUserInput!): User
  deleteAddress(input: ByIdInput!): Address!
  deleteAssignment(input: ByIdInput!): Assignment!
  deleteClaimant(input: ByIdInput!): Claimant!
  disconnectTranslator(input: DisconnectTranslatorInput!): User
  login(input: CreateUserInput!): User!
  updateAddress(input: UpdateAddressInput!): Address!
  updateAssignment(input: UpdateAssignmentInput!): Assignment!
  updateClaimant(input: UpdateClaimantInput!): Claimant!
  updateReminder(input: UpdateReminderInput!): Reminder!
  updateUser(data: UpdateUserInput!): User
}

input PaginatedInput {
  countPerPage: Int!
  page: Int!
}

type Query {
  getAddress(input: ByIdInput!): Address!
  getAddresses(input: PaginatedInput!): [Address]!
  getAssignment(input: ByIdInput!): Assignment!
  getAssignments(input: PaginatedInput!): [Assignment]!
  getClaimant(input: ByIdInput!): Claimant!
  getClaimants(input: PaginatedInput!): [Claimant]!
  getTranslator(input: ByEmailInput!): User!
  getTranslators(input: PaginatedInput!): [User]!
  getUser: User!
}

type Reminder {
  assignment: Assignment
  assignmentId: String
  claimantMessage: String
  id: String
  isEmail: Boolean
  isSMS: Boolean
  translatorMessage: String
}

type Translator {
  email: String
  firstName: String
  id: String
  languages: [String!]
  lastName: String
  phone: String
}

input UpdateAddressInput {
  address1: String
  address2: String
  city: String
  id: String!
  state: String
  zipCode: String
}

input UpdateAssignmentInput {
  addressId: String
  claimantId: String
  claimantNoShow: Boolean
  dateTime: DateTime
  id: String!
  isComplete: Boolean
  translatorId: String
  translatorNoShow: Boolean
}

input UpdateClaimantInput {
  email: String
  firstName: String
  id: String!
  languages: [String!]
  lastName: String
  phone: String
}

input UpdateReminderInput {
  claimantMessage: String
  isEmail: Boolean
  isSMS: Boolean
  translatorMessage: String
}

input UpdateUserInput {
  email: String
  firstName: String
  isManager: Boolean
  isProfileComplete: Boolean
  isTranslator: Boolean
  languages: [String!]
  lastName: String
  phone: String
  profilePic: String = ""
}

type User {
  assignedTo: [Assignment]
  assignments: [Assignment]
  city: String
  createdAt: DateTime
  email: String!
  firstName: String
  id: String!
  isBanned: Boolean
  isManager: Boolean
  isProfileComplete: Boolean
  isTranslator: Boolean
  languages: [String]
  lastName: String
  phone: String
  profilePic: String
  state: String
  translatingFor: [User]
  translators: [Translator]
  updatedAt: DateTime
}