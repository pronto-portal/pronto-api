generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
   provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String          @id @default(uuid())
  createdAt             DateTime        @default(now())
  updatedAt             DateTime        @updatedAt
  email                 String          @unique() @db.VarChar(120)
  phone                 String          @db.VarChar(30)
  firstName             String          @db.VarChar(120)
  lastName              String          @db.VarChar(120)
  profilePic            String          @default("") @db.VarChar(255)
  isManager             Boolean         @default(false)
  isTranslator          Boolean         @default(true)
  isBanned              Boolean         @default(false)
  assignments           Assignment[]    @relation("createdAssignments")
  assignedTo            Assignment[]    @relation("taskedAssignments")
}

model Assignment {
  id                    String          @id @default(uuid())
  createdAt             DateTime        @default(now())
  assignedTo            User            @relation("taskedAssignments", fields: [assignedToUserId], references: [id])
  assignedToUserId      String
  createdBy             User            @relation("createdAssignments", fields: [createdByUserId], references: [id])
  createdByUserId       String
  claimant              Claimant?       @relation()
  address               Address?        @relation()
  isComplete            Boolean         @default(false)
  claimantNoShow        Boolean         @default(false)
  translatorNoShow      Boolean         @default(false)
}

model Claimant {
  id                    String          @id @default(uuid())
  firstName             String          @db.VarChar(120)
  lastName              String          @db.VarChar(120)  
  email                 String          @db.VarChar(120)
  phone                 String          @db.VarChar(30)
  assignment            Assignment      @relation(fields: [assignmentId], references: [id])
  assignmentId          String          @unique
}

model Address {
  id                    String          @id @default(uuid())
  address1              String          @db.VarChar(255)
  address2              String          @db.VarChar(255)
  state                 String          @db.VarChar(2)
  zipCode               String          @db.VarChar(32)
  assignment            Assignment      @relation(fields: [assignmentId], references: [id])
  assignmentId          String          @unique
}